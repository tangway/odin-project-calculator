html {
  box-sizing: border-box;
}

*,
*:before,
*:after {
  box-sizing: inherit;
  margin: 0;
  padding: 0;
}

body {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100vh;
  /* background-color: rgb(135, 135, 135); */
  background-image: linear-gradient(to top right, rgb(229, 230, 229) 0%, rgb(44, 44, 44) 100%);
  /* background: radial-gradient(red, blue); */
}

#container {
  display: grid;
  grid-template-columns: repeat(5, 80px);
  grid-template-rows: repeat(4, minxmax(80px, 100px));
  gap: 6px;
  min-width: 300px;
  min-height: 500px;
  border: 15px solid white;
  border-radius: 20px;
  text-align: center;
  background-color: white;
}


#display {
  grid-column: 1 / -1;
  text-align: end;
  font-family:system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  font-size: xx-large;
  font-weight: 500;
  border: 1px solid;
  border-radius: 10px;
}

/* The line ;grid-column: 1 / -1; is used to place a grid item in a 
CSS Grid Layout, spanning it from the first column line to the last 
column line. The grid-column property is a shorthand for 
grid-column-start and grid-column-end properties, which define the 
starting and ending column lines for a grid item developer.mozilla.org. */

.button {
  display: flex;
  align-items: center;
  justify-content: center;
  border: 1px solid ;
  border-radius: 10px;
  font-size: xx-large;
  background-color: rgb(32, 32, 255);
  color: white;
}

#plus {
  /* border: 10px solid green; */
  grid-row: span 2;
}

#equals {
  /* border: 10px solid green; */
  grid-row: span 2;
}




