html {
  box-sizing: border-box;
}

*,
*:before,
*:after {
  box-sizing: inherit;
  margin: 0;
  padding: 0;
}

body {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100vh;
  background-color: rgb(135, 135, 135);
}

#container {
  display: grid;
  grid-template-columns: repeat(5, 80px);
  grid-template-rows: repeat(4, minxmax(80px, 100px));
  gap: 6px;
  min-width: 300px;
  min-height: 400px;
  border: 15px solid;
  border-radius: 20px;
  text-align: center;
}


#display {
  grid-column: 1 / -1;
  text-align: end;
  font-size: xx-large;
  font-weight: 500;
}

/* The line ;grid-column: 1 / -1; is used to place a grid item in a 
CSS Grid Layout, spanning it from the first column line to the last 
column line. The grid-column property is a shorthand for 
grid-column-start and grid-column-end properties, which define the 
starting and ending column lines for a grid item developer.mozilla.org. */

.button {
  display: flex;
  align-items: center;
  justify-content: center;
}

#clear {
  border: 10px solid green;
}

#number1,
#number2,
#number3,
#number4,
#number5,
#number6,
#number7,
#number8,
#number9,
#number0 {
  border: 10px solid red;
}

#plus {
  border: 10px solid green;
  grid-row: span 2;
}

#minus {
  border: 10px solid green;
}

#multiply {
  border: 10px solid green;
}

#divide {
  border: 10px solid green;
}

#equals {
  border: 10px solid green;
  grid-row: span 2;
}

#back {
  border: 10px solid green;
}

#decimal {
  border: 10px solid green;
}
